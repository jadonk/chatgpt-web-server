name: Record UI and publish media
on:
  push

permissions:
  contents: write

jobs:
  record:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-versions: lts/*

      - name: Build and start the app
        run: ./run-app-in-container.sh

      - name: Wait for healthcheck
        run: |
          for i in {1..40}; do
            if curl -fsS http://localhost:3000/page/home > /dev/null; then exit 0; fi
            sleep 3
          done
          echo "App did not become healthy" >&2
          docker compose logs app || true
          exit 1

      - name: Record with Playwright (saves .webm under demo/recordings/<test>/)
        run: |
          cd demo
          ./setup.sh
          ./run.sh

      - name: Pick latest recording
        id: pick
        run: |
          LATEST=$(ls -t demo/recordings/*/*.webm | head -n1)
          echo "latest=$LATEST" >> $GITHUB_OUTPUT

      - name: Ensure assets dir
        run: mkdir -p assets

      - name: Convert to MP4
        run: |
          docker run --rm -v "$PWD:/work" jrottenberg/ffmpeg:6.1-alpine \
            -i "/work/${{ steps.pick.outputs.latest }}" \
            -vf "scale='min(1200,iw)':-2:flags=bicubic,fps=30" \
            -c:v libx264 -crf 23 -pix_fmt yuv420p -movflags +faststart -an \
            "/work/assets/demo.mp4"

      - name: Convert to GIF (palette method)
        run: |
          docker run --rm -v "$PWD:/work" jrottenberg/ffmpeg:6.1-alpine \
            -i "/work/${{ steps.pick.outputs.latest }}" \
            -vf "fps=12,scale=800:-2:flags=bicubic,palettegen" \
            -y "/work/assets/palette.png"
          docker run --rm -v "$PWD:/work" jrottenberg/ffmpeg:6.1-alpine \
            -i "/work/${{ steps.pick.outputs.latest }}" -i "/work/assets/palette.png" \
            -lavfi "fps=12,scale=800:-2:flags=bicubic,paletteuse=dither=bayer:bayer_scale=1" \
            -y "/work/assets/demo.gif"

      - name: Commit media back to repo
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update demo recording (MP4+GIF)"
          file_pattern: assets/demo.mp4 assets/demo.gif

      - name: Upload artifact (also handy)
        uses: actions/upload-artifact@v4
        with:
          name: demo-recordings
          path: |
            demo/recordings/**
            assets/demo.mp4
            assets/demo.gif

      - name: Install Crystal
        uses: crystal-lang/install-crystal@v1

      - name: Build docs
        run: shards && crystal docs

      - name: Copy assets to docs
        run: mkdir -p docs/assets && cp assets/* docs/assets/ && cp public/favicon.ico docs/

      - name: Deploy docs on Github Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: docs # The folder the action should deploy.
